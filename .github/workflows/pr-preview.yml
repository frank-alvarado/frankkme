name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy_preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      # AWS credentials
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build static site
        run: npm run build
        
      - name: Deploy to S3 preview bucket
        run: |
          # Create preview folder in S3 bucket
          aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }}/pr-${{ env.PR_NUMBER }}/ --delete --cache-control max-age=60

      - name: Create or update Cloudflare DNS record for PR
        run: |
          # Install jq for JSON parsing
          which jq || apt-get update && apt-get install -y jq
          
          # Check if DNS record exists
          RECORD_ID=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records?name=pr-${{ env.PR_NUMBER }}.frankk.me" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" | jq -r '.result[0].id // empty')
          
          S3_WEBSITE_URL="${{ secrets.S3_BUCKET_NAME }}.s3-website-${{ env.AWS_REGION }}.amazonaws.com"
          
          if [ -n "$RECORD_ID" ]; then
            # Update existing record
            curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records/$RECORD_ID" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{
                \"type\": \"CNAME\",
                \"name\": \"pr-${{ env.PR_NUMBER }}\",
                \"content\": \"$S3_WEBSITE_URL\",
                \"ttl\": 1,
                \"proxied\": true
              }"
          else
            # Create new record
            curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{
                \"type\": \"CNAME\",
                \"name\": \"pr-${{ env.PR_NUMBER }}\",
                \"content\": \"$S3_WEBSITE_URL\",
                \"ttl\": 1,
                \"proxied\": true
              }"
          fi

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Preview deployed to: https://pr-${process.env.PR_NUMBER}.frankk.me/pr-${process.env.PR_NUMBER}/`
            })
